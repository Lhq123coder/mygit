层叠样式表：
用于给页面中的元素添加显示样式
引入方式：
1.内联样式：在元素内部通过style属性添加样式，不能复用，只能作用于一个元素
2.内部样式：在head中添加style标签，在标签内部通过选择器找到页面中元素，添加样式，
好处是可以在页面内部复用，只能在当前页面复用
3.外部样式：再单独的css文件中写样式代码，在head中添加link标签引入css文件，可以
多个页面复用：<link rel="stylesheet" href="demo_01.css">
三种样式的优先级：内联最高，外部和内部，后执行的覆盖
        选择器：
通过选择器可以林获得选中页面的某些元素，选中之后给元素添加样式
1.标签名选择器  格式： 标签名{样式代码}
2.id选择器        格式： #id{}
3.类选择器        格式：.class{}
4.所有元素选择器：*{}
5.属性选择器:    格式： input[type='text']{}
6.子孙选择器      格式：div span a{}
7.子选择器         格式：ul>li{}
8.分组选择器      格式：.c1,#d,h3{}
9.伪类选择器      格式：
   未访问过 a:link{}
     访问过 a:visited{}
   悬停    a:hover{}
   点击    a:active{}
优先级，范围越小，越高
      常用样式属性
color  字体颜色
border 边框
background-color 背景颜色
颜色赋值方式
1.名字
2.6位十六进制rgb赋值方式，每两位表示一个颜色，取值为0-255
 红色#ff0000 蓝色#0000ff 绿色#00ff00 黑色#000000 白色#ffffff
3.3位十六进制赋值，必须两位是一样的
4.四位，rgba(0,0,0,0)第四位是透明度，越小越透明

图片
div{
            width: 500px;
            height: 500px;
            background-color: yellowgreen;
        /*    设置背景图片*/
            background-image: url("../恐龙.gif");
            /*设置图片大小*/
            background-size: 250px 250px;

            background-repeat: no-repeat;
        /*    控制图片位置
        1.横向位置 left，center，right
        2.纵向位置 top，center，bottom
        */
            background-position:center center ;
        /*    通过百分比控制位置*/
            background-position: 50% 100%;
     布局相关的样式
盒子模型
包括元素的宽高，外边距，内边距，边框
元素宽高：width/height 只能对块级元素设置，行内元素宽高只受内容影响

外边距

指元素距离上级元素或相邻元素边框
/*给某个方向外边距单独赋值
            margin-top: 20px;*/
            /*margin-left: 20px;*/
        /*    批量赋值外边距*/
        /*    margin: 30px;四个方向都是30*/
        /*    margin: 10px 30px上下10，左右30*/
            margin: 0 auto;
            /*margin:10px 20px 30px 40px;上右左下*/
如果元素上边缘和上级元素上边缘重叠，此时添加上外边距，会出现粘连效果,
通过给上级元素添加overflow:hidden解决
如果上下相邻元素添加上外边距和下外边距，取最大值

行内元素外边距：左右外边距生效，上下不生效
左右边距位两个相邻相加   上下取最大，左右相加

边框

/*粗细 样式 颜色*/
            border-top: 1px solid darkslategray;
            border-bottom: 1px solid yellowgreen;
            border-radius: 10px;
块级元素加边框全部生效，并且全部影响元素所占宽高
行内元素四个边框全部生效，但是左右边框会影响元素所占的宽度上下边框不影响
元素所占高度

内边距
块级：内边距会影响元素的宽高
行内：左右内边距会影响元素所占的宽度上下内边距不影响元素的高度

块级元素  ---可以设置宽高，外边距全部生效，边框全部生效且影响宽高
内边距全部生效且全部影响宽高
行内元素-----不可以设置宽高，外边距左右生效，上下不生效，边框生效
单只影响宽，内边距全部生效，但只影响宽

   文本
            /*文本对齐*/
            text-align: center;
            /*    文本修饰
            underline 下划线
            overline 上划线
            line-through 删除线
            none 无
             */
            text-decoration: line-through;
        /*    文本颜色*/
            color: hotpink;
        /*    文本阴影
              1.阴影颜色
              23.代表阴影偏移坐标
              4.阴影模糊程度
        */
            text-shadow: red 2px 2px 3px;
        /*    行高*/
            line-height: 200px;
                }
        a{
            text-decoration: none;
        }
        h3{
            /*字体大小*/
            font-size: 20px;
            color: coral;
            font-weight: bold;
        /*    斜体*/
            font-style: italic;
        /*    字体名称*/
            font-family: sans-serif;
        }
    学子商城练习：
1.段落标签p自带上下外边距，不需要的话 margin：0；
2.display：block；把行内元素改成块级元素
3.float：left/right；浮动元素

   溢出设置  overflow
1.超出范围隐藏    hidden
2.超出范围显示    visible
3.超过范围滚动显示    scroll
  显示方式  display
1.block:块级元素的默认值，盒子模型没有任何限制，但是元素必须独占一行
2.inline:行内元素的默认值，可以和多个行内元素共占一行，不能修改宽你高
3.inline-block：行内块，可以修改宽高，也可以共占一行
    
       定位
1.是文档流定位  元素如果是文档定位则显示的位置会从上到下 从左向右排列
设置方式：position：static
2.相对定位  
设置方式：position：relative
position: relative;
        /*    相对定位
              不会脱离文档流，不影响其他元素位置
              通过上右下左改变,相对原始位置
        */
            top: 30px;
            left: 30px;
应用场景：存在于页面中的元素如果需要做位置移动，但是不希望页面其他元素跟着移动
3.绝对定位
元素脱离文档流，后面的元素会往上顶，上下左右相对于窗口或者做了相对定位的祖先元素，
如果多个祖先的元素做了相对定位，就近原则
设置方式：position：absolute
#big{
            width: 500px;
            height: 500px;
            background-color: yellow;
            margin: 50px 0 0 50px;
            /*相对定位*/
            position: relative;
        }
        #middle{
            width: 300px;
            height: 300px;
            background-color: green;
        }
        #small{
            width: 100px;
            height: 100px;
            background-color: blue;
            position: absolute;
            top:43px;
            left: 0;
        }
场景：当元素需要层叠显示，并且不希望元素存在于文档流中使用
   
    固定定位
相对于窗口固定在窗口
position:fixed;

      浮动定位
元素脱离文档流，元素可以在当前所在行的左侧或右侧浮动，当撞到
父元素边框或行内其他浮动元素停止
如果一行换不下自动换行
当子元素全部浮动，高度识别为0，用overflow：hidden；










